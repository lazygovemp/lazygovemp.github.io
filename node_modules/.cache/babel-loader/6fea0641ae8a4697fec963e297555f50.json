{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Andrew.Williams\\\\Documents\\\\organization-management\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Andrew.Williams\\\\Documents\\\\organization-management\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Andrew.Williams\\\\Documents\\\\organization-management\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Andrew.Williams\\\\Documents\\\\organization-management\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Andrew.Williams\\\\Documents\\\\organization-management\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andrew.Williams\\\\Documents\\\\organization-management\\\\src\\\\MyDataTable.js\";\nimport React from \"react\";\nimport MyDataRow from \"./MyDataRow.js\";\n\nvar MyDataTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MyDataTable, _React$Component);\n\n  function MyDataTable(props) {\n    var _this;\n\n    _classCallCheck(this, MyDataTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MyDataTable).call(this, props));\n    _this.state = {\n      data: [],\n      columnNames: []\n    };\n    return _this;\n  }\n\n  _createClass(MyDataTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          columnNames = _this$props.columnNames;\n      return React.createElement(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, Object.values(columnNames).map(function (name) {\n        return React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, name);\n      })), data.map(function (row) {\n        return React.createElement(MyDataRow, {\n          row: row,\n          columnNames: columnNames,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return MyDataTable;\n}(React.Component);\n\nexport default MyDataTable;","map":{"version":3,"sources":["C:\\Users\\Andrew.Williams\\Documents\\organization-management\\src\\MyDataTable.js"],"names":["React","MyDataRow","MyDataTable","props","state","data","columnNames","Object","values","map","name","row","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;IAEMC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAFiB;AAMlB;;;;6BAEQ;AAAA,wBACqB,KAAKH,KAD1B;AAAA,UACDE,IADC,eACDA,IADC;AAAA,UACKC,WADL,eACKA,WADL;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,MAAM,CAACC,MAAP,CAAcF,WAAd,EAA2BG,GAA3B,CAA+B,UAAAC,IAAI;AAAA,eAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,IAAL,CADkC;AAAA,OAAnC,CADH,CADF,EAMGL,IAAI,CAACI,GAAL,CAAS,UAAAE,GAAG;AAAA,eACX,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAEA,GAAhB;AAAqB,UAAA,WAAW,EAAEL,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADW;AAAA,OAAZ,CANH,CADF;AAYD;;;;EAxBuBN,KAAK,CAACY,S;;AA2BhC,eAAeV,WAAf","sourcesContent":["import React from \"react\";\nimport MyDataRow from \"./MyDataRow.js\";\n\nclass MyDataTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      columnNames: []\n    };\n  }\n\n  render() {\n    let { data, columnNames } = this.props;\n\n    return (\n      <table>\n        <tr>\n          {Object.values(columnNames).map(name => (\n            <th>{name}</th>\n          ))}\n        </tr>\n        {data.map(row => (\n          <MyDataRow row={row} columnNames={columnNames} />\n        ))}\n      </table>\n    );\n  }\n}\n\nexport default MyDataTable;\n"]},"metadata":{},"sourceType":"module"}